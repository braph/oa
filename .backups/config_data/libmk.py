#!/usr/bin/python
# -*- coding: utf-8 -*-
from __future__ import print_function

import sys

warn = lambda *a,**kw: print('WARNING', *a, file=sys.stderr, **kw)
info = lambda *a,**kw: print('INFO',    *a, file=sys.stderr, **kw)

TYPE2STR  = {int:'int', float:'float', bool:'bool', str:'str',
             True:'True', False:'False', None:'None'}

def export_begin(file, comment=None):
    print('#!/usr/bin/python')
    print('# -*- coding: utf-8 -*-')
    if comment: print('#', comment)
    print('# This file was generated by', file)

def export(file):
    with open(file, 'r') as fh:
        for l in fh:
            if l.startswith('# @EXPORT'):
                print()
                break
        for l in fh:
            if l.startswith('# @END'):
                print()
                break
            else:
                print(l, end='')

def export_variable(name, value, format='{name} = {value}'):
    if isinstance(value, dict):
        value = '{\n%s\n}' % ',\n'.join(['%r: %r' % (k,v) for k,v in value.items()])
    else:
        value = repr(value)
    print(format.format(name=name, value=value))

def export_variables(name, globals):
    print('%s = %r' % (name, eval(name, globals)))

def myRepr(o):
    if isinstance(o, dict):
        return '{%s}' % ',\n'.join([
            '%s: %s' % (myRepr(k), myRepr(v)) for k,v in o.items()
        ])
    if o in TYPE2STR: return TYPE2STR[o]
    return repr(o)

